{"mappings":"AAGgB,sBCsDJA,EAACC,GACTC,KAAKC,IAAMC,SAAQC,cAAIL,GACvBE,KAAKD,QAASA,EACdC,KAAKI,WAAa,KAElBJ,KAAIK,cACFC,iBAGH,MAAAC,YAAAA,EAAAC,YAAAA,EAAAC,KAAAA,GAAAT,KAAAD,QAEDC,KAAAC,IAAAS,UApEkB,EAACD,EAAMD,EAAaD,IAa/B,oHAZMA,GAAe,kKAQFC,EACtB,kEACA,0EATgBC,EACjBE,KACEC,GACC,qDAAqDA,EAAKC,MAAMD,EAAKE,eAExEC,KAAK,+CA6DgBC,CAAAP,EAAAD,EAAAD,gBAGjBU,OAAO,QAAEhB,IAAAiB,UAAOC,IAAA,mBAAEC,iBAAO,QAAApB,KAAAqB,qBAAAC,KAAAtB,YAAEuB,OAASvB,KACvCC,IAAKE,cAAS,4BACTqB,OAAQxB,KAAKC,IAAAE,cACP,4BACNsB,WAAazB,KAAAC,IAAQE,cACb,2BAEhBH,KAAAD,QAAAS,cAEDR,KAAaC,IAAGmB,iBAAA,QAAApB,KAAA0B,aAAAJ,KAAAtB,OACdA,KAAMiB,OAAUjB,KAAOC,IAAAE,cAAiB,8CAInCwB,SACCC,KAACA,EAAWf,GAAAA,GAAac,EAAAE,OAAAC,QAC7B,CACD,QAEG,QACL,SAEDC,SAAaH,GAAM5B,KAAAgC,SACX,SAAAJ,EAAiB5B,KACjBiC,OAAMpB,GACA,WAARe,GAAQ5B,KAAAkC,qBAKPP,GACN,MAAAb,EAAAa,EAAAE,OAAAf,MAAAqB,eAEU1B,KAAAA,GAAAT,KAAAD,QACJqC,EAzGT,EAAA3B,EAAAK,IAkDIL,EAAQ4B,QAACzB,IACV,GAAAA,EAAAE,MAAAqB,cAAAJ,SAAAjB,GAAA,OAAAF,KAsDsB0B,CAAA7B,EAAAK,GAChBsB,EAAOG,OAOZvC,KAAKwC,aAAQJ,GALTpC,KACDyB,WAAAf,UAAiB,+CAOtB8B,aAAW/B,GACT,MAAAgC,EAAoBhC,EAAKE,KAAMC,GAAqC,2BAAAA,EAAAC,IAAAb,KAAAI,WAAA,WAAA,gCAAAQ,EAAAC,MAAAD,EAAAE,eACrEC,KAAA,IAEDf,KAASyB,WAAAf,UAAA+B,SAER5B,GAEGb,KAAGI,WAAAS,EACLb,KAAAwB,OA7HJkB,YA6HqB1C,KAAK2C,QAAQ7B,MAE9Bd,KAAKC,IAAI2C,iBAAc,sBAAQC,SAAAjC,GAAAA,EAAAM,UAAA4B,OAAA,cAE/B9C,KAAKC,IAAAE,cAAiB,aAAOU,OAAeK,UAAEC,IAAA,YAE9CnB,KAAKkC,QAGPS,cACE,OAAM3C,KAvIVD,QAuIgBU,KAAKsC,MAAKnC,GAAQA,EAAAC,IAAAb,KAAAI,sBAM9B,OAAIJ,KAAKC,IAAOiB,UAAO8B,SAAA,qBAGtBvC,KAAAA,GAAAT,KAAAD,QACFC,KAAAC,IAAAiB,UAAAC,IAAA,QAEDnB,KAASuB,OAAAL,UAAAC,IAAA,mBACPnB,KAAKuB,OAAML,UAAU4B,OAAO,iBAC7B9C,KAAAwC,aAAA/B,GAGHyB,iRDrJ4B,UAAW,CACrC3B,YAAa,uBACbC,aAAa,EACbC,KAAM,CACJ,CAAEI,GAAI,EAAGC,MAAO,QAChB,CAAED,GAAI,EAAGC,MAAO,SAChB,CAAED,GAAI,EAAGC,MAAO,SAChB,CAAED,GAAI,EAAGC,MAAO,UAChB,CAAED,GAAI,EAAGC,MAAO,YAChB,CAAED,GAAI,EAAGC,MAAO,YAChB,CAAED,GAAI,EAAGC,MAAO,SAChB,CAAED,GAAI,EAAGC,MAAO","sources":["src/index.js","src/select2.js"],"sourcesContent":["import \"./sass/select2.sass\";\r\nimport Select2 from \"./select2\";\r\n\r\nconst select2 = new Select2(\"#select\", {\r\n  placeholder: \"1 Please select item\",\r\n  allowSearch: true,\r\n  data: [\r\n    { id: 1, value: \"Milk\" },\r\n    { id: 2, value: \"Water\" },\r\n    { id: 3, value: \"Bread\" },\r\n    { id: 4, value: \"Orange\" },\r\n    { id: 5, value: \"Cucumber\" },\r\n    { id: 6, value: \"Pumpkins\" },\r\n    { id: 7, value: \"Onion\" },\r\n    { id: 8, value: \"Meat\" },\r\n  ],\r\n});\r\n","const getTemplate = (data, allowSearch, placeholder) => {\r\n  const text = placeholder ?? \"Please select option\";\r\n  const selectItems = data\r\n    .map(\r\n      (item) =>\r\n        `<li class=\"select__item\" data-type=\"item\" data-id=${item.id}>${item.value}</li>`\r\n    )\r\n    .join(\"\");\r\n\r\n  const inputSearchMarkup = allowSearch\r\n    ? `<input type=\"text\" class=\"select__search\" data-type=\"search\" />`\r\n    : ``;\r\n\r\n  return `\r\n\t\t<div class=\"select\">\r\n\t\t\t<div class=\"select__input\" data-type=\"input\">\r\n\t\t\t\t<span data-type=\"value\">${text}</span>\r\n\t\t\t\t<i class=\"fa fa-chevron-up\" data-type=\"arrow\"></i>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div class=\"select__dropdown\">\r\n\t\t\t\t${inputSearchMarkup}\r\n\t\t\t\t<ul class=\"select__list\" data-type=\"list-item\">\r\n\t\t\t\t\t${selectItems}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t</div>`;\r\n};\r\n\r\nconst getFilteredItems = (data, value) => {\r\n  return data.filter((item) => {\r\n    if (item.value.toLowerCase().includes(value)) {\r\n      return item;\r\n    }\r\n  });\r\n};\r\n\r\nclass Select2 {\r\n  constructor(selector, options) {\r\n    this.$el = document.querySelector(selector);\r\n    this.options = options;\r\n    this.selectedId = null;\r\n\r\n    this.render();\r\n    this.setup();\r\n  }\r\n\r\n  render() {\r\n    const { placeholder, allowSearch, data } = this.options;\r\n    this.$el.innerHTML = getTemplate(data, allowSearch, placeholder);\r\n  }\r\n\r\n  setup() {\r\n    this.$input = \"\";\r\n    this.$el.classList.add(\"select\");\r\n\r\n    document.addEventListener(\"click\", this.documentClickHandler.bind(this));\r\n    this.$arrow = this.$el.querySelector('[data-type=\"arrow\"]');\r\n    this.$value = this.$el.querySelector('[data-type=\"value\"]');\r\n    this.$listItems = this.$el.querySelector('[data-type=\"list-item\"]');\r\n\r\n    if (this.options.allowSearch) {\r\n      this.$el.addEventListener(\"keyup\", this.keyupHandler.bind(this));\r\n      this.$input = this.$el.querySelector('[data-type=\"search\"]');\r\n    }\r\n  }\r\n\r\n  documentClickHandler(e) {\r\n    const { type, id } = e.target.dataset;\r\n\r\n    if ([\"input\", \"value\", \"arrow\"].includes(type)) {\r\n      this.toggle();\r\n    } else if (type === \"item\") {\r\n      this.select(id);\r\n    } else if (type !== \"search\") {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  keyupHandler(e) {\r\n    const value = e.target.value.toLowerCase();\r\n    const { data } = this.options;\r\n    const filteredItems = getFilteredItems(data, value);\r\n\r\n    if (!filteredItems.length) {\r\n      this.$listItems.innerHTML = `<li class=\"select__item\">No items found</li>`;\r\n      return;\r\n    }\r\n\r\n    this._renderItems(filteredItems);\r\n  }\r\n\r\n  _renderItems(data) {\r\n    const listItemMarkup = data\r\n      .map((item) => {\r\n        return `<li class=\"select__item ${\r\n          item.id == this.selectedId ? \"selected\" : \"\"\r\n        }\" data-type=\"item\" data-id=${item.id}>${item.value}</li>`;\r\n      })\r\n      .join(\"\");\r\n    this.$listItems.innerHTML = listItemMarkup;\r\n  }\r\n\r\n  select(id) {\r\n    this.selectedId = id;\r\n    this.$value.textContent = this.current.value;\r\n\r\n    this.$el\r\n      .querySelectorAll('[data-type=\"item\"]')\r\n      .forEach((item) => item.classList.remove(\"selected\"));\r\n    this.$el.querySelector(`[data-id=\"${id}\"]`).classList.add(\"selected\");\r\n\r\n    this.close();\r\n  }\r\n\r\n  get current() {\r\n    return this.options.data.find((item) => item.id == this.selectedId);\r\n  }\r\n\r\n  isOpen() {\r\n    return this.$el.classList.contains(\"open\");\r\n  }\r\n\r\n  open() {\r\n    const { data } = this.options;\r\n\r\n    this.$el.classList.add(\"open\");\r\n    this.$arrow.classList.add(\"fa-chevron-down\");\r\n    this.$arrow.classList.remove(\"fa-chevron-up\");\r\n\r\n    this._renderItems(data);\r\n  }\r\n\r\n  close() {\r\n    const { data } = this.options;\r\n\r\n    this.$el.classList.remove(\"open\");\r\n    this.$arrow.classList.add(\"fa-chevron-up\");\r\n    this.$arrow.classList.remove(\"fa-chevron-down\");\r\n\r\n    if (this.$input.value) {\r\n      this._renderItems(data);\r\n      this.$input.value = \"\";\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.isOpen() ? this.close() : this.open();\r\n  }\r\n}\r\n\r\nexport default Select2;\r\n"],"names":["selector","options","this","$el","document","querySelector","selectedId","render","setup","placeholder","allowSearch","data","innerHTML","map","item","id","value","join","$d3cdb3de989d9658$var$getTemplate","$input","classList","add","addEventListener","documentClickHandler","bind","$arrow","$value","$listItems","keyupHandler","e","type","target","dataset","includes","toggle","select","close","toLowerCase","filteredItems","filter","$d3cdb3de989d9658$var$getFilteredItems","length","_renderItems","listItemMarkup","textContent","current","querySelectorAll","forEach","remove","find","contains"],"version":3,"file":"index.ed65b510.js.map"}